I"S<h1 id="code-snippets-with-line-numbers">Code snippets with line numbers</h1>

<p>The default settings for HTML compression are incompatible with the HTML
produced by Jekyll (4.1.1 or earlier) for line numbers from highlighted code
– both when using Kramdown code fences and when using Liquid highlight tags.</p>

<p>To avoid non-conforming HTML and unsatisfactory layout, HTML compression
can be turned off by using the following configuration option:</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="na">compress_html</span><span class="pi">:</span>
  <span class="na">ignore</span><span class="pi">:</span>
    <span class="na">envs</span><span class="pi">:</span> <span class="s">all</span></code></pre></figure>

<p>When using Kramdown code fences, line numbers are turned on globally by the
following configuration option:</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="na">kramdown</span><span class="pi">:</span>
  <span class="na">syntax_highlighter_opts</span><span class="pi">:</span>
    <span class="na">block</span><span class="pi">:</span>
      <span class="na">line_numbers</span><span class="pi">:</span> <span class="no">true</span></code></pre></figure>

<p>Line numbers can then be suppressed locally using Liquid tags (<em>without</em> the
<code class="language-plaintext highlighter-rouge">linenos</code> option) instead of fences:</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="pi">{</span><span class="err">%</span> <span class="nv">highlight some_language %</span><span class="pi">}</span>
<span class="s">Some code</span>
<span class="pi">{</span><span class="err">%</span> <span class="nv">endhighlight %</span><span class="pi">}</span></code></pre></figure>

<h2 id="workarounds">Workarounds</h2>

<p>To use HTML compression together with line numbers, all highlighted code
needs to be wrapped using one of the following workarounds.
(The variable name <code class="language-plaintext highlighter-rouge">some_var</code> can be changed to avoid clashes; it can also
be replaced by <code class="language-plaintext highlighter-rouge">code</code> – but note that <code class="language-plaintext highlighter-rouge">code=code</code> cannot be removed).</p>

<h3 id="code-fences-three-backticks">Code fences (three backticks)</h3>

<figure class="highlight"><pre><code class="language-default" data-lang="default">{% capture some_var %}
```some_language
Some code
```
{% endcapture %}
{% assign some_var = some_var | markdownify %}
{% include fix_linenos.html code=some_var %}</code></pre></figure>

<h3 id="liquid-highlighting">Liquid highlighting</h3>

<figure class="highlight"><pre><code class="language-default" data-lang="default">{% capture some_var %}
{% highlight some_language linenos %}
Some code
{% endhighlight %}
{% endcapture %}
{% include fix_linenos.html code=some_var %}</code></pre></figure>

<p><em>Credit:</em> The original version of the above workaround was suggested by
Dmitry Hrabrov at
<a href="https://github.com/penibelst/jekyll-compress-html/issues/71#issuecomment-188144901">https://github.com/penibelst/jekyll-compress-html/issues/71#issuecomment-188144901</a>.</p>

<h2 id="examples">Examples</h2>

<p>✅ Using code fences + workaround (will only show line numbers if enabled globally in <code class="language-plaintext highlighter-rouge">_config.yml</code>):</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Javascript code with syntax highlighting in fences</span>
<span class="kd">var</span> <span class="nx">fun</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">lang</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">dateformat</span><span class="p">.</span><span class="nx">i18n</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./lang/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">l</span><span class="p">)</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>✅ Using liquid highlighting + workaround:</p>

<figure class="highlight"><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="c1"># Ruby code with syntax highlighting and fixed line numbers using Liquid</span>
<span class="no">GitHubPages</span><span class="o">::</span><span class="no">Dependencies</span><span class="p">.</span><span class="nf">gems</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">gem</span><span class="p">,</span> <span class="n">version</span><span class="o">|</span>
  <span class="n">s</span><span class="p">.</span><span class="nf">add_dependency</span><span class="p">(</span><span class="n">gem</span><span class="p">,</span> <span class="s2">"= </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></figure>

<p>❌ With the default configuration options, the following example illustrates
the <strong>incorrect</strong> formatting arising from the incompatibility of HTML compression
and the non-conforming HTML produced by Jekyll for line numbers:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="c1"># Ruby code with syntax highlighting and unfixed line numbers using Liquid</span>
<span class="no">GitHubPages</span><span class="o">::</span><span class="no">Dependencies</span><span class="p">.</span><span class="nf">gems</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">gem</span><span class="p">,</span> <span class="n">version</span><span class="o">|</span>
  <span class="n">s</span><span class="p">.</span><span class="nf">add_dependency</span><span class="p">(</span><span class="n">gem</span><span class="p">,</span> <span class="s2">"= </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></figure>

:ET